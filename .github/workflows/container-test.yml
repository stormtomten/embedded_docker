  name: Test Docker Container

  on:
    workflow_run:
      workflows: ["Build Docker Image"]
      types:
        - completed

  permissions:
    contents: read

  jobs:
    test:
      name: Run and Test Docker Container
      runs-on: ubuntu-latest
      steps:
        - name: List Available Artifacts
          run: |
            curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/artifacts

        - name: download docker image artifact from previous workflow
          env:
            github_token: ${{ secrets.github_token }}
            run_id: ${{ github.event.workflow_run.id }}
          run: |
            echo "fetching artifact metadata..."
            artifact_url=$(curl -s -h "authorization: bearer $github_token" \
              https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/artifacts \
              | jq -r '.artifacts[] | select(.name == "rpi5-docker-image") | .archive_download_url')

            echo "downloading artifact from $artifact_url"
            curl -l -h "authorization: bearer $github_token" \
              -o artifact.zip "$artifact_url"

            unzip artifact.zip


        - name: Load Docker image
          run: |
            docker load < rpi5.tar

        - name: Docker network
          run: |
            docker network create --driver bridge --subnet 192.168.2.0/24 --gateway 192.168.2.1 net

        - name: Run Docker container
          run: |
            docker run -d --name rpi5-test --network net -p 2222:22 rpi5
            
        - name: Start SSH service
          run: |
            docker exec rpi5-test service ssh start

        - name: Wait for SSH
          run: |
            for i in {1..20}; do
              if nc -z localhost 2222; then
                echo "SSH is ready!"
                exit 0
              fi
              echo "Waiting for SSH..."
              sleep 2
            done
            echo "SSH failed to start." && exit 1

        - name: Test SSH connection
          run: |
            sshpass -p "pass" ssh -tt -o StrictHostKeyChecking=no user@localhost -p 2222 << EOF
            echo "Connected over SSH!"
            picotool --help || (echo "picotool not available" && exit 1)
            EOF
            echo "SSH test passed!"

        - name: Verify oh-my-zsh installation
          run: |
            sshpass -p "pass" ssh -o StrictHostKeyChecking=no user@localhost -p 2222 <<EOF
            if [ -f "\$HOME/.oh-my-zsh/tools/upgrade.sh" ]; then
              echo "oh-my-zsh is installed! Running upgrade.sh to confirm functionality..."
              bash \$HOME/.oh-my-zsh/tools/upgrade.sh || (echo "oh-my-zsh upgrade failed!" && exit 1)
              echo "oh-my-zsh is properly installed and functional!";
            else
              echo "oh-my-zsh is not installed!" && exit 1;
            fi
            EOF

        - name: Cleanup
          run: |
            docker stop rpi5-test
            docker rm rpi5-test
